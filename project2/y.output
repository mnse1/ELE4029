Terminals unused in grammar

    ERROR


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMI
    7                | type_specifier ID LBRACE size RBRACE SEMI

    8 size: NUM

    9 type_specifier: INT
   10               | VOID

   11 fun_declaration: type_specifier identifier LPAREN params RPAREN compound_stmt

   12 identifier: ID

   13 params: param_list

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier ID
   17      | type_specifier ID LBRACE RBRACE
   18      | VOID

   19 compound_stmt: LCURLY local_declarations statement_list RCURLY

   20 local_declarations: local_declarations var_declaration
   21                   | ε

   22 statement_list: statement_list statement
   23               | ε

   24 statement: expression_stmt
   25          | compound_stmt
   26          | selection_stmt
   27          | iteration_stmt
   28          | return_stmt

   29 expression_stmt: exp SEMI
   30                | SEMI

   31 selection_stmt: IF LPAREN exp RPAREN statement
   32               | IF LPAREN exp RPAREN statement ELSE statement

   33 iteration_stmt: WHILE LPAREN exp RPAREN statement

   34 return_stmt: RETURN SEMI
   35            | RETURN exp SEMI

   36 var: ID
   37    | ID LBRACE exp RBRACE

   38 exp: var ASSIGN exp
   39    | simple_expression

   40 simple_expression: additive_expression relop additive_expression
   41                  | additive_expression

   42 relop: LT
   43      | LE
   44      | GT
   45      | GE
   46      | EQ
   47      | NE

   48 additive_expression: additive_expression addop term
   49                    | term

   50 addop: PLUS
   51      | MINUS

   52 term: term mulop factor
   53     | factor

   54 mulop: TIMES
   55      | OVER

   56 factor: LPAREN exp RPAREN
   57       | var
   58       | call
   59       | NUM

   60 call: identifier LPAREN args RPAREN

   61 args: arg_list
   62     | ε

   63 arg_list: arg_list COMMA exp
   64         | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 31 32
    ELSE (259) 32
    WHILE (260) 33
    RETURN (261) 34 35
    INT (262) 9
    VOID (263) 10 18
    ASSIGN (264) 38
    EQ (265) 46
    NE (266) 47
    LT (267) 42
    LE (268) 43
    GT (269) 44
    GE (270) 45
    PLUS (271) 50
    MINUS (272) 51
    TIMES (273) 54
    OVER (274) 55
    LPAREN (275) 11 31 32 33 56 60
    RPAREN (276) 11 31 32 33 56 60
    LBRACE (277) 7 17 37
    RBRACE (278) 7 17 37
    LCURLY (279) 19
    RCURLY (280) 19
    SEMI (281) 6 7 29 30 34 35
    COMMA (282) 14 63
    NUM (283) 8 59
    ID (284) 6 7 12 16 17 36 37
    ERROR (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    declaration_list (33)
        on left: 2 3
        on right: 1 2
    declaration (34)
        on left: 4 5
        on right: 2 3
    var_declaration (35)
        on left: 6 7
        on right: 4 20
    size (36)
        on left: 8
        on right: 7
    type_specifier (37)
        on left: 9 10
        on right: 6 7 11 16 17
    fun_declaration (38)
        on left: 11
        on right: 5
    identifier (39)
        on left: 12
        on right: 11 60
    params (40)
        on left: 13
        on right: 11
    param_list (41)
        on left: 14 15
        on right: 13 14
    param (42)
        on left: 16 17 18
        on right: 14 15
    compound_stmt (43)
        on left: 19
        on right: 11 25
    local_declarations (44)
        on left: 20 21
        on right: 19 20
    statement_list (45)
        on left: 22 23
        on right: 19 22
    statement (46)
        on left: 24 25 26 27 28
        on right: 22 31 32 33
    expression_stmt (47)
        on left: 29 30
        on right: 24
    selection_stmt (48)
        on left: 31 32
        on right: 26
    iteration_stmt (49)
        on left: 33
        on right: 27
    return_stmt (50)
        on left: 34 35
        on right: 28
    var (51)
        on left: 36 37
        on right: 38 57
    exp (52)
        on left: 38 39
        on right: 29 31 32 33 35 37 38 56 63 64
    simple_expression (53)
        on left: 40 41
        on right: 39
    relop (54)
        on left: 42 43 44 45 46 47
        on right: 40
    additive_expression (55)
        on left: 48 49
        on right: 40 41 48
    addop (56)
        on left: 50 51
        on right: 48
    term (57)
        on left: 52 53
        on right: 48 49 52
    mulop (58)
        on left: 54 55
        on right: 52
    factor (59)
        on left: 56 57 58 59
        on right: 52 53
    call (60)
        on left: 60
        on right: 58
    args (61)
        on left: 61 62
        on right: 60
    arg_list (62)
        on left: 63 64
        on right: 61 63


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    9 type_specifier: INT •

    $default  reduce using rule 9 (type_specifier)


State 2

   10 type_specifier: VOID •

    $default  reduce using rule 10 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMI
    7                | type_specifier • ID LBRACE size RBRACE SEMI
   11 fun_declaration: type_specifier • identifier LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    identifier  go to state 12


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMI
    7                | type_specifier ID • LBRACE size RBRACE SEMI
   12 identifier: ID •

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14

    $default  reduce using rule 12 (identifier)


State 12

   11 fun_declaration: type_specifier identifier • LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 15


State 13

    7 var_declaration: type_specifier ID LBRACE • size RBRACE SEMI

    NUM  shift, and go to state 16

    size  go to state 17


State 14

    6 var_declaration: type_specifier ID SEMI •

    $default  reduce using rule 6 (var_declaration)


State 15

   11 fun_declaration: type_specifier identifier LPAREN • params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 18

    type_specifier  go to state 19
    params          go to state 20
    param_list      go to state 21
    param           go to state 22


State 16

    8 size: NUM •

    $default  reduce using rule 8 (size)


State 17

    7 var_declaration: type_specifier ID LBRACE size • RBRACE SEMI

    RBRACE  shift, and go to state 23


State 18

   10 type_specifier: VOID •
   18 param: VOID •

    ID        reduce using rule 10 (type_specifier)
    $default  reduce using rule 18 (param)


State 19

   16 param: type_specifier • ID
   17      | type_specifier • ID LBRACE RBRACE

    ID  shift, and go to state 24


State 20

   11 fun_declaration: type_specifier identifier LPAREN params • RPAREN compound_stmt

    RPAREN  shift, and go to state 25


State 21

   13 params: param_list •
   14 param_list: param_list • COMMA param

    COMMA  shift, and go to state 26

    $default  reduce using rule 13 (params)


State 22

   15 param_list: param •

    $default  reduce using rule 15 (param_list)


State 23

    7 var_declaration: type_specifier ID LBRACE size RBRACE • SEMI

    SEMI  shift, and go to state 27


State 24

   16 param: type_specifier ID •
   17      | type_specifier ID • LBRACE RBRACE

    LBRACE  shift, and go to state 28

    $default  reduce using rule 16 (param)


State 25

   11 fun_declaration: type_specifier identifier LPAREN params RPAREN • compound_stmt

    LCURLY  shift, and go to state 29

    compound_stmt  go to state 30


State 26

   14 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 18

    type_specifier  go to state 19
    param           go to state 31


State 27

    7 var_declaration: type_specifier ID LBRACE size RBRACE SEMI •

    $default  reduce using rule 7 (var_declaration)


State 28

   17 param: type_specifier ID LBRACE • RBRACE

    RBRACE  shift, and go to state 32


State 29

   19 compound_stmt: LCURLY • local_declarations statement_list RCURLY

    $default  reduce using rule 21 (local_declarations)

    local_declarations  go to state 33


State 30

   11 fun_declaration: type_specifier identifier LPAREN params RPAREN compound_stmt •

    $default  reduce using rule 11 (fun_declaration)


State 31

   14 param_list: param_list COMMA param •

    $default  reduce using rule 14 (param_list)


State 32

   17 param: type_specifier ID LBRACE RBRACE •

    $default  reduce using rule 17 (param)


State 33

   19 compound_stmt: LCURLY local_declarations • statement_list RCURLY
   20 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (statement_list)

    var_declaration  go to state 34
    type_specifier   go to state 35
    statement_list   go to state 36


State 34

   20 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 20 (local_declarations)


State 35

    6 var_declaration: type_specifier • ID SEMI
    7                | type_specifier • ID LBRACE size RBRACE SEMI

    ID  shift, and go to state 37


State 36

   19 compound_stmt: LCURLY local_declarations statement_list • RCURLY
   22 statement_list: statement_list • statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 29
    RCURLY  shift, and go to state 42
    SEMI    shift, and go to state 43
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    compound_stmt        go to state 47
    statement            go to state 48
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    var                  go to state 53
    exp                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 37

    6 var_declaration: type_specifier ID • SEMI
    7                | type_specifier ID • LBRACE size RBRACE SEMI

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14


State 38

   31 selection_stmt: IF • LPAREN exp RPAREN statement
   32               | IF • LPAREN exp RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


State 39

   33 iteration_stmt: WHILE • LPAREN exp RPAREN statement

    LPAREN  shift, and go to state 61


State 40

   34 return_stmt: RETURN • SEMI
   35            | RETURN • exp SEMI

    LPAREN  shift, and go to state 41
    SEMI    shift, and go to state 62
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 63
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 41

   56 factor: LPAREN • exp RPAREN

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 64
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 42

   19 compound_stmt: LCURLY local_declarations statement_list RCURLY •

    $default  reduce using rule 19 (compound_stmt)


State 43

   30 expression_stmt: SEMI •

    $default  reduce using rule 30 (expression_stmt)


State 44

   59 factor: NUM •

    $default  reduce using rule 59 (factor)


State 45

   12 identifier: ID •
   36 var: ID •
   37    | ID • LBRACE exp RBRACE

    LBRACE  shift, and go to state 65

    LPAREN    reduce using rule 12 (identifier)
    $default  reduce using rule 36 (var)


State 46

   60 call: identifier • LPAREN args RPAREN

    LPAREN  shift, and go to state 66


State 47

   25 statement: compound_stmt •

    $default  reduce using rule 25 (statement)


State 48

   22 statement_list: statement_list statement •

    $default  reduce using rule 22 (statement_list)


State 49

   24 statement: expression_stmt •

    $default  reduce using rule 24 (statement)


State 50

   26 statement: selection_stmt •

    $default  reduce using rule 26 (statement)


State 51

   27 statement: iteration_stmt •

    $default  reduce using rule 27 (statement)


State 52

   28 statement: return_stmt •

    $default  reduce using rule 28 (statement)


State 53

   38 exp: var • ASSIGN exp
   57 factor: var •

    ASSIGN  shift, and go to state 67

    $default  reduce using rule 57 (factor)


State 54

   29 expression_stmt: exp • SEMI

    SEMI  shift, and go to state 68


State 55

   39 exp: simple_expression •

    $default  reduce using rule 39 (exp)


State 56

   40 simple_expression: additive_expression • relop additive_expression
   41                  | additive_expression •
   48 additive_expression: additive_expression • addop term

    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    LT     shift, and go to state 71
    LE     shift, and go to state 72
    GT     shift, and go to state 73
    GE     shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 41 (simple_expression)

    relop  go to state 77
    addop  go to state 78


State 57

   49 additive_expression: term •
   52 term: term • mulop factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 81


State 58

   53 term: factor •

    $default  reduce using rule 53 (term)


State 59

   58 factor: call •

    $default  reduce using rule 58 (factor)


State 60

   31 selection_stmt: IF LPAREN • exp RPAREN statement
   32               | IF LPAREN • exp RPAREN statement ELSE statement

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 82
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 61

   33 iteration_stmt: WHILE LPAREN • exp RPAREN statement

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 83
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 62

   34 return_stmt: RETURN SEMI •

    $default  reduce using rule 34 (return_stmt)


State 63

   35 return_stmt: RETURN exp • SEMI

    SEMI  shift, and go to state 84


State 64

   56 factor: LPAREN exp • RPAREN

    RPAREN  shift, and go to state 85


State 65

   37 var: ID LBRACE • exp RBRACE

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 86
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 66

   60 call: identifier LPAREN • args RPAREN

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    $default  reduce using rule 62 (args)

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 87
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    args                 go to state 88
    arg_list             go to state 89


State 67

   38 exp: var ASSIGN • exp

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 90
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 68

   29 expression_stmt: exp SEMI •

    $default  reduce using rule 29 (expression_stmt)


State 69

   46 relop: EQ •

    $default  reduce using rule 46 (relop)


State 70

   47 relop: NE •

    $default  reduce using rule 47 (relop)


State 71

   42 relop: LT •

    $default  reduce using rule 42 (relop)


State 72

   43 relop: LE •

    $default  reduce using rule 43 (relop)


State 73

   44 relop: GT •

    $default  reduce using rule 44 (relop)


State 74

   45 relop: GE •

    $default  reduce using rule 45 (relop)


State 75

   50 addop: PLUS •

    $default  reduce using rule 50 (addop)


State 76

   51 addop: MINUS •

    $default  reduce using rule 51 (addop)


State 77

   40 simple_expression: additive_expression relop • additive_expression

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 91
    additive_expression  go to state 92
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 78

   48 additive_expression: additive_expression addop • term

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier  go to state 46
    var         go to state 91
    term        go to state 93
    factor      go to state 58
    call        go to state 59


State 79

   54 mulop: TIMES •

    $default  reduce using rule 54 (mulop)


State 80

   55 mulop: OVER •

    $default  reduce using rule 55 (mulop)


State 81

   52 term: term mulop • factor

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier  go to state 46
    var         go to state 91
    factor      go to state 94
    call        go to state 59


State 82

   31 selection_stmt: IF LPAREN exp • RPAREN statement
   32               | IF LPAREN exp • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 95


State 83

   33 iteration_stmt: WHILE LPAREN exp • RPAREN statement

    RPAREN  shift, and go to state 96


State 84

   35 return_stmt: RETURN exp SEMI •

    $default  reduce using rule 35 (return_stmt)


State 85

   56 factor: LPAREN exp RPAREN •

    $default  reduce using rule 56 (factor)


State 86

   37 var: ID LBRACE exp • RBRACE

    RBRACE  shift, and go to state 97


State 87

   64 arg_list: exp •

    $default  reduce using rule 64 (arg_list)


State 88

   60 call: identifier LPAREN args • RPAREN

    RPAREN  shift, and go to state 98


State 89

   61 args: arg_list •
   63 arg_list: arg_list • COMMA exp

    COMMA  shift, and go to state 99

    $default  reduce using rule 61 (args)


State 90

   38 exp: var ASSIGN exp •

    $default  reduce using rule 38 (exp)


State 91

   57 factor: var •

    $default  reduce using rule 57 (factor)


State 92

   40 simple_expression: additive_expression relop additive_expression •
   48 additive_expression: additive_expression • addop term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 40 (simple_expression)

    addop  go to state 78


State 93

   48 additive_expression: additive_expression addop term •
   52 term: term • mulop factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 81


State 94

   52 term: term mulop factor •

    $default  reduce using rule 52 (term)


State 95

   31 selection_stmt: IF LPAREN exp RPAREN • statement
   32               | IF LPAREN exp RPAREN • statement ELSE statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 43
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    compound_stmt        go to state 47
    statement            go to state 100
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    var                  go to state 53
    exp                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 96

   33 iteration_stmt: WHILE LPAREN exp RPAREN • statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 43
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    compound_stmt        go to state 47
    statement            go to state 101
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    var                  go to state 53
    exp                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 97

   37 var: ID LBRACE exp RBRACE •

    $default  reduce using rule 37 (var)


State 98

   60 call: identifier LPAREN args RPAREN •

    $default  reduce using rule 60 (call)


State 99

   63 arg_list: arg_list COMMA • exp

    LPAREN  shift, and go to state 41
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    var                  go to state 53
    exp                  go to state 102
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 100

   31 selection_stmt: IF LPAREN exp RPAREN statement •
   32               | IF LPAREN exp RPAREN statement • ELSE statement

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 31 (selection_stmt)]
    $default  reduce using rule 31 (selection_stmt)


State 101

   33 iteration_stmt: WHILE LPAREN exp RPAREN statement •

    $default  reduce using rule 33 (iteration_stmt)


State 102

   63 arg_list: arg_list COMMA exp •

    $default  reduce using rule 63 (arg_list)


State 103

   32 selection_stmt: IF LPAREN exp RPAREN statement ELSE • statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 43
    NUM     shift, and go to state 44
    ID      shift, and go to state 45

    identifier           go to state 46
    compound_stmt        go to state 47
    statement            go to state 104
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    var                  go to state 53
    exp                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 104

   32 selection_stmt: IF LPAREN exp RPAREN statement ELSE statement •

    $default  reduce using rule 32 (selection_stmt)
